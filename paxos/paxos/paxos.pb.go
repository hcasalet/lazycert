// Code generated by protoc-gen-go. DO NOT EDIT.
// source: paxos.proto

package paxos

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Status int32

const (
	Status_PASS Status = 0
	Status_FAIL Status = 1
)

var Status_name = map[int32]string{
	0: "PASS",
	1: "FAIL",
}

var Status_value = map[string]int32{
	"PASS": 0,
	"FAIL": 1,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}

func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_fec356ed5fe8331d, []int{0}
}

type Data struct {
	B                    *Ballot  `protobuf:"bytes,1,opt,name=b,proto3" json:"b,omitempty"`
	Kv                   *KV      `protobuf:"bytes,2,opt,name=kv,proto3" json:"kv,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Data) Reset()         { *m = Data{} }
func (m *Data) String() string { return proto.CompactTextString(m) }
func (*Data) ProtoMessage()    {}
func (*Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_fec356ed5fe8331d, []int{0}
}

func (m *Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Data.Unmarshal(m, b)
}
func (m *Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Data.Marshal(b, m, deterministic)
}
func (m *Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Data.Merge(m, src)
}
func (m *Data) XXX_Size() int {
	return xxx_messageInfo_Data.Size(m)
}
func (m *Data) XXX_DiscardUnknown() {
	xxx_messageInfo_Data.DiscardUnknown(m)
}

var xxx_messageInfo_Data proto.InternalMessageInfo

func (m *Data) GetB() *Ballot {
	if m != nil {
		return m.B
	}
	return nil
}

func (m *Data) GetKv() *KV {
	if m != nil {
		return m.Kv
	}
	return nil
}

type KV struct {
	Key                  []byte   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                []byte   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KV) Reset()         { *m = KV{} }
func (m *KV) String() string { return proto.CompactTextString(m) }
func (*KV) ProtoMessage()    {}
func (*KV) Descriptor() ([]byte, []int) {
	return fileDescriptor_fec356ed5fe8331d, []int{1}
}

func (m *KV) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KV.Unmarshal(m, b)
}
func (m *KV) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KV.Marshal(b, m, deterministic)
}
func (m *KV) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KV.Merge(m, src)
}
func (m *KV) XXX_Size() int {
	return xxx_messageInfo_KV.Size(m)
}
func (m *KV) XXX_DiscardUnknown() {
	xxx_messageInfo_KV.DiscardUnknown(m)
}

var xxx_messageInfo_KV proto.InternalMessageInfo

func (m *KV) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *KV) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type Ballot struct {
	N                    uint32   `protobuf:"varint,1,opt,name=n,proto3" json:"n,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ballot) Reset()         { *m = Ballot{} }
func (m *Ballot) String() string { return proto.CompactTextString(m) }
func (*Ballot) ProtoMessage()    {}
func (*Ballot) Descriptor() ([]byte, []int) {
	return fileDescriptor_fec356ed5fe8331d, []int{2}
}

func (m *Ballot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ballot.Unmarshal(m, b)
}
func (m *Ballot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ballot.Marshal(b, m, deterministic)
}
func (m *Ballot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ballot.Merge(m, src)
}
func (m *Ballot) XXX_Size() int {
	return xxx_messageInfo_Ballot.Size(m)
}
func (m *Ballot) XXX_DiscardUnknown() {
	xxx_messageInfo_Ballot.DiscardUnknown(m)
}

var xxx_messageInfo_Ballot proto.InternalMessageInfo

func (m *Ballot) GetN() uint32 {
	if m != nil {
		return m.N
	}
	return 0
}

type Promise struct {
	Status               Status   `protobuf:"varint,1,opt,name=status,proto3,enum=paxos.Status" json:"status,omitempty"`
	B                    *Ballot  `protobuf:"bytes,2,opt,name=b,proto3" json:"b,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Promise) Reset()         { *m = Promise{} }
func (m *Promise) String() string { return proto.CompactTextString(m) }
func (*Promise) ProtoMessage()    {}
func (*Promise) Descriptor() ([]byte, []int) {
	return fileDescriptor_fec356ed5fe8331d, []int{3}
}

func (m *Promise) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Promise.Unmarshal(m, b)
}
func (m *Promise) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Promise.Marshal(b, m, deterministic)
}
func (m *Promise) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Promise.Merge(m, src)
}
func (m *Promise) XXX_Size() int {
	return xxx_messageInfo_Promise.Size(m)
}
func (m *Promise) XXX_DiscardUnknown() {
	xxx_messageInfo_Promise.DiscardUnknown(m)
}

var xxx_messageInfo_Promise proto.InternalMessageInfo

func (m *Promise) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_PASS
}

func (m *Promise) GetB() *Ballot {
	if m != nil {
		return m.B
	}
	return nil
}

type Dummy struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Dummy) Reset()         { *m = Dummy{} }
func (m *Dummy) String() string { return proto.CompactTextString(m) }
func (*Dummy) ProtoMessage()    {}
func (*Dummy) Descriptor() ([]byte, []int) {
	return fileDescriptor_fec356ed5fe8331d, []int{4}
}

func (m *Dummy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Dummy.Unmarshal(m, b)
}
func (m *Dummy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Dummy.Marshal(b, m, deterministic)
}
func (m *Dummy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Dummy.Merge(m, src)
}
func (m *Dummy) XXX_Size() int {
	return xxx_messageInfo_Dummy.Size(m)
}
func (m *Dummy) XXX_DiscardUnknown() {
	xxx_messageInfo_Dummy.DiscardUnknown(m)
}

var xxx_messageInfo_Dummy proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("paxos.Status", Status_name, Status_value)
	proto.RegisterType((*Data)(nil), "paxos.Data")
	proto.RegisterType((*KV)(nil), "paxos.KV")
	proto.RegisterType((*Ballot)(nil), "paxos.Ballot")
	proto.RegisterType((*Promise)(nil), "paxos.Promise")
	proto.RegisterType((*Dummy)(nil), "paxos.Dummy")
}

func init() { proto.RegisterFile("paxos.proto", fileDescriptor_fec356ed5fe8331d) }

var fileDescriptor_fec356ed5fe8331d = []byte{
	// 322 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x51, 0xe1, 0x4b, 0x3a, 0x41,
	0x10, 0xfd, 0xed, 0xfd, 0xdc, 0xb3, 0xc6, 0x53, 0x64, 0x88, 0x30, 0x33, 0x88, 0x8d, 0x48, 0x22,
	0xfc, 0x60, 0xdf, 0x03, 0x45, 0x84, 0xd0, 0xe0, 0x58, 0xc1, 0xa0, 0x6f, 0x7b, 0x3a, 0x84, 0x78,
	0x7a, 0xc7, 0xdd, 0x2a, 0xd9, 0x9f, 0xd3, 0x5f, 0x1a, 0xbb, 0x7b, 0x26, 0x81, 0xf4, 0x69, 0xdf,
	0xdb, 0x37, 0x6f, 0xe6, 0x31, 0x03, 0x95, 0x54, 0x7d, 0x24, 0x79, 0x27, 0xcd, 0x12, 0x9d, 0x20,
	0xb7, 0x44, 0x3c, 0x41, 0x69, 0xa0, 0xb4, 0xc2, 0x4b, 0x60, 0x51, 0x83, 0x5d, 0xb3, 0x76, 0xa5,
	0x5b, 0xed, 0xb8, 0xba, 0xbe, 0x8a, 0xe3, 0x44, 0x4b, 0x16, 0xe1, 0x05, 0x78, 0xcb, 0x6d, 0xc3,
	0xb3, 0xea, 0x69, 0xa1, 0x8e, 0xa6, 0xd2, 0x5b, 0x6e, 0xc5, 0x03, 0x78, 0xa3, 0x29, 0xd6, 0xe1,
	0xff, 0x92, 0x76, 0xd6, 0x1f, 0x48, 0x03, 0xf1, 0x0c, 0xf8, 0x56, 0xc5, 0x1b, 0xb2, 0xae, 0x40,
	0x3a, 0x22, 0xce, 0xc1, 0x77, 0x5d, 0x31, 0x00, 0xb6, 0xb6, 0xf5, 0x55, 0xc9, 0xd6, 0xe2, 0x05,
	0xca, 0x61, 0x96, 0xac, 0x16, 0x39, 0xe1, 0x2d, 0xf8, 0xb9, 0x56, 0x7a, 0x93, 0x5b, 0xb5, 0xf6,
	0x93, 0x66, 0x62, 0x3f, 0x65, 0x21, 0xba, 0xbc, 0xde, 0xf1, 0xbc, 0xa2, 0x0c, 0x7c, 0xb0, 0x59,
	0xad, 0x76, 0xf7, 0x2d, 0xf0, 0x9d, 0x0f, 0x4f, 0xa0, 0x14, 0xf6, 0x26, 0x93, 0xfa, 0x3f, 0x83,
	0x86, 0xbd, 0xe7, 0x71, 0x9d, 0x75, 0x3f, 0x81, 0x87, 0xc6, 0x89, 0x6d, 0x33, 0x9e, 0x52, 0x95,
	0x11, 0xfe, 0x6e, 0xd6, 0xac, 0x15, 0x74, 0x9f, 0xee, 0x06, 0xfc, 0xde, 0x6c, 0x46, 0xa9, 0xc6,
	0x4a, 0xa1, 0x98, 0xed, 0x35, 0x83, 0x3d, 0x31, 0x53, 0x51, 0x00, 0x1f, 0x93, 0xca, 0xd6, 0x7f,
	0xd4, 0x74, 0x87, 0x50, 0x96, 0x94, 0xc6, 0x8b, 0x99, 0xc2, 0x16, 0x94, 0x24, 0xa9, 0x39, 0x1e,
	0x36, 0xdb, 0x3c, 0x40, 0xbc, 0x02, 0xfe, 0x9a, 0x2d, 0x34, 0x1d, 0x97, 0xfb, 0x77, 0x50, 0xa5,
	0xf9, 0x3b, 0xc5, 0x2a, 0x72, 0x7f, 0x7d, 0x77, 0xd7, 0x90, 0xbd, 0x39, 0xf0, 0xe5, 0xb9, 0x37,
	0xf2, 0xed, 0xd9, 0x1f, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x30, 0xe0, 0x40, 0x25, 0x05, 0x02,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PaxosClient is the client API for Paxos service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PaxosClient interface {
	Prepare(ctx context.Context, in *Ballot, opts ...grpc.CallOption) (*Promise, error)
	Accept(ctx context.Context, in *Data, opts ...grpc.CallOption) (*Dummy, error)
	Learn(ctx context.Context, in *Data, opts ...grpc.CallOption) (*Dummy, error)
}

type paxosClient struct {
	cc *grpc.ClientConn
}

func NewPaxosClient(cc *grpc.ClientConn) PaxosClient {
	return &paxosClient{cc}
}

func (c *paxosClient) Prepare(ctx context.Context, in *Ballot, opts ...grpc.CallOption) (*Promise, error) {
	out := new(Promise)
	err := c.cc.Invoke(ctx, "/paxos.Paxos/Prepare", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paxosClient) Accept(ctx context.Context, in *Data, opts ...grpc.CallOption) (*Dummy, error) {
	out := new(Dummy)
	err := c.cc.Invoke(ctx, "/paxos.Paxos/Accept", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paxosClient) Learn(ctx context.Context, in *Data, opts ...grpc.CallOption) (*Dummy, error) {
	out := new(Dummy)
	err := c.cc.Invoke(ctx, "/paxos.Paxos/Learn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PaxosServer is the server API for Paxos service.
type PaxosServer interface {
	Prepare(context.Context, *Ballot) (*Promise, error)
	Accept(context.Context, *Data) (*Dummy, error)
	Learn(context.Context, *Data) (*Dummy, error)
}

func RegisterPaxosServer(s *grpc.Server, srv PaxosServer) {
	s.RegisterService(&_Paxos_serviceDesc, srv)
}

func _Paxos_Prepare_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Ballot)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaxosServer).Prepare(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/paxos.Paxos/Prepare",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaxosServer).Prepare(ctx, req.(*Ballot))
	}
	return interceptor(ctx, in, info, handler)
}

func _Paxos_Accept_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Data)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaxosServer).Accept(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/paxos.Paxos/Accept",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaxosServer).Accept(ctx, req.(*Data))
	}
	return interceptor(ctx, in, info, handler)
}

func _Paxos_Learn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Data)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaxosServer).Learn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/paxos.Paxos/Learn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaxosServer).Learn(ctx, req.(*Data))
	}
	return interceptor(ctx, in, info, handler)
}

var _Paxos_serviceDesc = grpc.ServiceDesc{
	ServiceName: "paxos.Paxos",
	HandlerType: (*PaxosServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Prepare",
			Handler:    _Paxos_Prepare_Handler,
		},
		{
			MethodName: "Accept",
			Handler:    _Paxos_Accept_Handler,
		},
		{
			MethodName: "Learn",
			Handler:    _Paxos_Learn_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "paxos.proto",
}

// ReplicaClient is the client API for Replica service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ReplicaClient interface {
	Read(ctx context.Context, in *KV, opts ...grpc.CallOption) (*KV, error)
	Write(ctx context.Context, in *KV, opts ...grpc.CallOption) (*KV, error)
}

type replicaClient struct {
	cc *grpc.ClientConn
}

func NewReplicaClient(cc *grpc.ClientConn) ReplicaClient {
	return &replicaClient{cc}
}

func (c *replicaClient) Read(ctx context.Context, in *KV, opts ...grpc.CallOption) (*KV, error) {
	out := new(KV)
	err := c.cc.Invoke(ctx, "/paxos.Replica/Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *replicaClient) Write(ctx context.Context, in *KV, opts ...grpc.CallOption) (*KV, error) {
	out := new(KV)
	err := c.cc.Invoke(ctx, "/paxos.Replica/Write", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ReplicaServer is the server API for Replica service.
type ReplicaServer interface {
	Read(context.Context, *KV) (*KV, error)
	Write(context.Context, *KV) (*KV, error)
}

func RegisterReplicaServer(s *grpc.Server, srv ReplicaServer) {
	s.RegisterService(&_Replica_serviceDesc, srv)
}

func _Replica_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KV)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReplicaServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/paxos.Replica/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReplicaServer).Read(ctx, req.(*KV))
	}
	return interceptor(ctx, in, info, handler)
}

func _Replica_Write_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KV)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReplicaServer).Write(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/paxos.Replica/Write",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReplicaServer).Write(ctx, req.(*KV))
	}
	return interceptor(ctx, in, info, handler)
}

var _Replica_serviceDesc = grpc.ServiceDesc{
	ServiceName: "paxos.Replica",
	HandlerType: (*ReplicaServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Read",
			Handler:    _Replica_Read_Handler,
		},
		{
			MethodName: "Write",
			Handler:    _Replica_Write_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "paxos.proto",
}
